{"ast":null,"code":"var _jsxFileName = \"/Users/ashrafkhan/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '367a1dd9d8fa4e7aac443fb3cd47e9fd'; // Replace with your Client ID\nconst clientSecret = '87d4c1ad132c440383be6992fb365c6c'; // Replace with your Client Secret\nconst redirectUri = \"http://localhost:3000/callback\"; // Replace with your redirect URI\nconst scopes = \"user-read-private user-read-email\";\nconst SpotifySongSearch = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  useEffect(async () => {\n    const url = 'https://accounts.spotify.com/api/token';\n    const options = {\n      method: 'POST',\n      header: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: 'grant_type=client-credentials&client_id=' + clientId + '&client_secret=' + clientSecret\n    };\n    try {\n      const res = await fetch(url, options);\n      const jsonRes = res.json();\n      setAccessToken(jsonRes);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifySongSearch, \"/hDqOmVl7yuMMXb3RLLvM1f76O0=\");\n_c = SpotifySongSearch;\nexport default SpotifySongSearch;\nvar _c;\n$RefreshReg$(_c, \"SpotifySongSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","clientId","clientSecret","redirectUri","scopes","SpotifySongSearch","_s","accessToken","setAccessToken","query","setQuery","songs","setSongs","url","options","method","header","body","res","fetch","jsonRes","json","error","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashrafkhan/my-app/src/App.js"],"sourcesContent":["\n\n\nimport React, { useState, useEffect } from \"react\";\n\nconst clientId = '367a1dd9d8fa4e7aac443fb3cd47e9fd'; // Replace with your Client ID\nconst clientSecret = '87d4c1ad132c440383be6992fb365c6c';// Replace with your Client Secret\nconst redirectUri = \"http://localhost:3000/callback\"; // Replace with your redirect URI\nconst scopes = \"user-read-private user-read-email\";\n\nconst SpotifySongSearch = () => {\n  const [accessToken, setAccessToken] = useState(\"\");\n  \n  const [query, setQuery] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n\n  useEffect(async ()=> {\n    const url = 'https://accounts.spotify.com/api/token';\n    const options = {\n      method: 'POST',\n      header: {\n        \"Content-Type\" : \"application/x-www-form-urlencoded\",\n      }, \n      body: 'grant_type=client-credentials&client_id=' + clientId + '&client_secret=' + clientSecret, \n    }\n    try{\n      const res =  await fetch(url, options);\n      const jsonRes =  res.json();\n      setAccessToken(jsonRes);\n    } catch(error) {\n      console.log(error);\n    }\n  },[])\n\n  \n     \n  \n\n  return (\n    <div >\n      </div>\n  );\n};\n\nexport default SpotifySongSearch;\n"],"mappings":";;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAG,kCAAkC,CAAC,CAAC;AACrD,MAAMC,YAAY,GAAG,kCAAkC,CAAC;AACxD,MAAMC,WAAW,GAAG,gCAAgC,CAAC,CAAC;AACtD,MAAMC,MAAM,GAAG,mCAAmC;AAElD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,YAAW;IACnB,MAAMe,GAAG,GAAG,wCAAwC;IACpD,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,MAAM,EAAE;QACN,cAAc,EAAG;MACnB,CAAC;MACDC,IAAI,EAAE,0CAA0C,GAAGhB,QAAQ,GAAG,iBAAiB,GAAGC;IACpF,CAAC;IACD,IAAG;MACD,MAAMgB,GAAG,GAAI,MAAMC,KAAK,CAACN,GAAG,EAAEC,OAAO,CAAC;MACtC,MAAMM,OAAO,GAAIF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC3Bb,cAAc,CAACY,OAAO,CAAC;IACzB,CAAC,CAAC,OAAME,KAAK,EAAE;MACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC,EAAC,EAAE,CAAC;EAML,oBACEtB,OAAA;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEZ,CAAC;AAACtB,EAAA,CAhCID,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AAkCvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}