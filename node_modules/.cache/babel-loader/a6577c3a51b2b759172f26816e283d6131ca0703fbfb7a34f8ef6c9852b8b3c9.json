{"ast":null,"code":"var _jsxFileName = \"/Users/ashrafkhan/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '367a1dd9d8fa4e7aac443fb3cd47e9fd'; // Replace with your Client ID\nconst clientSecret = '87d4c1ad132c440383be6992fb365c6c'; // Replace with your Client Secret\nconst redirectUri = \"http://localhost:3000/callback\"; // Replace with your redirect URI\nconst scopes = \"user-read-private user-read-email\";\nconst SpotifySongSearch = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [query, setQuery] = useState(\"taylor swift\");\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    const fetchAccessToken = async () => {\n      var url = 'https://accounts.spotify.com/api/token';\n      var options = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: `grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}`\n      };\n      try {\n        const result = await fetch(url, options);\n        const data = await result.json();\n        setAccessToken(data.access_token);\n      } catch (error) {\n        console.error('Error fetching access token:', error);\n      }\n    };\n    fetchAccessToken();\n  }, []);\n  console.log(accessToken);\n  async function SearchSong() {\n    const url = `https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=track&limit=10`;\n    const authorizationSearch = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        // Fixed incorrect 'applications/json' to 'application/json'\n        \"Authorization\": `Bearer ${accessToken}` // Added a space after 'Bearer' and used template literals for clarity\n      }\n    };\n    try {\n      const res = await fetch(url, authorizationSearch);\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const jsonRes = await res.json(); // Awaited the response JSON parsing\n    } catch (error) {\n      console.error('Error fetching song:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spotify Song Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for a song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: SearchSong,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Artist: \", song.artists.map(artist => artist.name).join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: song.external_urls.spotify,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Listen on Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifySongSearch, \"PGYEy45+fkFGrzLtsG06CP1idhI=\");\n_c = SpotifySongSearch;\nexport default SpotifySongSearch;\nvar _c;\n$RefreshReg$(_c, \"SpotifySongSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","clientId","clientSecret","redirectUri","scopes","SpotifySongSearch","_s","accessToken","setAccessToken","query","setQuery","songs","setSongs","fetchAccessToken","url","options","method","headers","body","result","fetch","data","json","access_token","error","console","log","SearchSong","encodeURIComponent","authorizationSearch","res","ok","Error","status","jsonRes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","song","name","artists","artist","join","href","external_urls","spotify","rel","id","_c","$RefreshReg$"],"sources":["/Users/ashrafkhan/my-app/src/App.js"],"sourcesContent":["\n\n\nimport React, { useState, useEffect } from \"react\";\n\nconst clientId = '367a1dd9d8fa4e7aac443fb3cd47e9fd'; // Replace with your Client ID\nconst clientSecret = '87d4c1ad132c440383be6992fb365c6c';// Replace with your Client Secret\nconst redirectUri = \"http://localhost:3000/callback\"; // Replace with your redirect URI\nconst scopes = \"user-read-private user-read-email\";\n\nconst SpotifySongSearch = () => {\n  const [accessToken, setAccessToken] = useState(\"\");\n  \n  const [query, setQuery] = useState(\"taylor swift\");\n  const [songs, setSongs] = useState([]);\n\n  useEffect( ()=> {\n    const fetchAccessToken = async () => {\n      var url = 'https://accounts.spotify.com/api/token';\n      var options = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\" : \"application/x-www-form-urlencoded\",\n        }, \n        body: `grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}`\n      }\n      \n      try {\n        const result = await fetch(url, options);\n        const data = await result.json();\n        setAccessToken(data.access_token);\n      } catch (error) {\n        console.error('Error fetching access token:', error);\n      }\n       \n    }\n   \n      \n\n    fetchAccessToken();\n  },[]);\n console.log(accessToken);\n  async function SearchSong() {\n    const url = `https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=track&limit=10`;\n    \n  \n    const authorizationSearch = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json', // Fixed incorrect 'applications/json' to 'application/json'\n        \"Authorization\": `Bearer ${accessToken}` // Added a space after 'Bearer' and used template literals for clarity\n      }\n    };\n  \n    try {\n      const res = await fetch(url, authorizationSearch);\n  \n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n  \n      const jsonRes = await res.json(); // Awaited the response JSON parsing\n     \n    } catch (error) {\n      console.error('Error fetching song:', error);\n    }\n\n    \n  }\n  return (\n    <div>\n      <h1>Spotify Song Search</h1>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for a song\"\n      />\n      <button onClick={SearchSong}>Search</button>\n\n      <ul>\n        {songs.map((song) => (\n          <li key={song.id}>\n            <p>{song.name}</p>\n            <p>Artist: {song.artists.map((artist) => artist.name).join(\", \")}</p>\n            <a href={song.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n              Listen on Spotify\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n \n};\n\nexport default SpotifySongSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}