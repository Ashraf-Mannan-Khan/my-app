{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nconst clientId = '367a1dd9d8fa4e7aac443fb3cd47e9fd'; // Replace with your Client ID\nconst clientSecret = '87d4c1ad132c440383be6992fb365c6c'; // Replace with your Client Secret\nconst redirectUri = \"http://localhost:3000/callback\"; // Replace with your redirect URI\nconst scopes = \"user-read-private user-read-email\";\nconst SpotifySongSearch = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [query, setQuery] = useState(\"taylor swift\");\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    const fetchAccessToken = async () => {\n      var url = 'https://accounts.spotify.com/api/token';\n      var options = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: `grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}`\n      };\n      try {\n        const result = await fetch(url, options);\n        const data = await result.json();\n        setAccessToken(data.access_token);\n      } catch (error) {\n        console.error('Error fetching access token:', error);\n      }\n    };\n    fetchAccessToken();\n  }, []);\n  console.log(accessToken);\n  async function SearchSong() {\n    const url = `https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=track&limit=10`;\n    const authorizationSearch = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        // Fixed incorrect 'applications/json' to 'application/json'\n        \"Authorization\": `Bearer ${accessToken}` // Added a space after 'Bearer' and used template literals for clarity\n      }\n    };\n    try {\n      const res = await fetch(url, authorizationSearch);\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const jsonRes = await res.json(); // Awaited the response JSON parsing\n      console.log(jsonRes);\n    } catch (error) {\n      console.error('Error fetching song:', error);\n    }\n  }\n};\n_s(SpotifySongSearch, \"PGYEy45+fkFGrzLtsG06CP1idhI=\");\n_c = SpotifySongSearch;\nexport default SpotifySongSearch;\nvar _c;\n$RefreshReg$(_c, \"SpotifySongSearch\");","map":{"version":3,"names":["React","useState","useEffect","clientId","clientSecret","redirectUri","scopes","SpotifySongSearch","_s","accessToken","setAccessToken","query","setQuery","songs","setSongs","fetchAccessToken","url","options","method","headers","body","result","fetch","data","json","access_token","error","console","log","SearchSong","encodeURIComponent","authorizationSearch","res","ok","Error","status","jsonRes","_c","$RefreshReg$"],"sources":["/Users/ashrafkhan/my-app/src/App.js"],"sourcesContent":["\n\n\nimport React, { useState, useEffect } from \"react\";\n\nconst clientId = '367a1dd9d8fa4e7aac443fb3cd47e9fd'; // Replace with your Client ID\nconst clientSecret = '87d4c1ad132c440383be6992fb365c6c';// Replace with your Client Secret\nconst redirectUri = \"http://localhost:3000/callback\"; // Replace with your redirect URI\nconst scopes = \"user-read-private user-read-email\";\n\nconst SpotifySongSearch = () => {\n  const [accessToken, setAccessToken] = useState(\"\");\n  \n  const [query, setQuery] = useState(\"taylor swift\");\n  const [songs, setSongs] = useState([]);\n\n  useEffect( ()=> {\n    const fetchAccessToken = async () => {\n      var url = 'https://accounts.spotify.com/api/token';\n      var options = {\n        method: 'POST',\n        headers: {\n          \"Content-Type\" : \"application/x-www-form-urlencoded\",\n        }, \n        body: `grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}`\n      }\n      \n      try {\n        const result = await fetch(url, options);\n        const data = await result.json();\n        setAccessToken(data.access_token);\n      } catch (error) {\n        console.error('Error fetching access token:', error);\n      }\n       \n    }\n   \n      \n\n    fetchAccessToken();\n  },[]);\n console.log(accessToken);\n  async function SearchSong() {\n    const url = `https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=track&limit=10`;\n    \n  \n    const authorizationSearch = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json', // Fixed incorrect 'applications/json' to 'application/json'\n        \"Authorization\": `Bearer ${accessToken}` // Added a space after 'Bearer' and used template literals for clarity\n      }\n    };\n  \n    try {\n      const res = await fetch(url, authorizationSearch);\n  \n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n  \n      const jsonRes = await res.json(); // Awaited the response JSON parsing\n      console.log(jsonRes);\n    } catch (error) {\n      console.error('Error fetching song:', error);\n    }\n  }\n  \n \n};\n\nexport default SpotifySongSearch;\n"],"mappings":";AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,QAAQ,GAAG,kCAAkC,CAAC,CAAC;AACrD,MAAMC,YAAY,GAAG,kCAAkC,CAAC;AACxD,MAAMC,WAAW,GAAG,gCAAgC,CAAC,CAAC;AACtD,MAAMC,MAAM,GAAG,mCAAmC;AAElD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,cAAc,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAE,MAAK;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAIC,GAAG,GAAG,wCAAwC;MAClD,IAAIC,OAAO,GAAG;QACZC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAG;QACnB,CAAC;QACDC,IAAI,EAAE,2CAA2CjB,QAAQ,kBAAkBC,YAAY;MACzF,CAAC;MAED,IAAI;QACF,MAAMiB,MAAM,GAAG,MAAMC,KAAK,CAACN,GAAG,EAAEC,OAAO,CAAC;QACxC,MAAMM,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;QAChCd,cAAc,CAACa,IAAI,CAACE,YAAY,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IAEF,CAAC;IAIDX,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAC,EAAE,CAAC;EACNY,OAAO,CAACC,GAAG,CAACnB,WAAW,CAAC;EACvB,eAAeoB,UAAUA,CAAA,EAAG;IAC1B,MAAMb,GAAG,GAAG,uCAAuCc,kBAAkB,CAACnB,KAAK,CAAC,sBAAsB;IAGlG,MAAMoB,mBAAmB,GAAG;MAC1Bb,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAAE;QACpC,eAAe,EAAE,UAAUV,WAAW,EAAE,CAAC;MAC3C;IACF,CAAC;IAED,IAAI;MACF,MAAMuB,GAAG,GAAG,MAAMV,KAAK,CAACN,GAAG,EAAEe,mBAAmB,CAAC;MAEjD,IAAI,CAACC,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,GAAG,CAACG,MAAM,EAAE,CAAC;MACtD;MAEA,MAAMC,OAAO,GAAG,MAAMJ,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC;MAClCG,OAAO,CAACC,GAAG,CAACQ,OAAO,CAAC;IACtB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF;AAGF,CAAC;AAAClB,EAAA,CA3DID,iBAAiB;AAAA8B,EAAA,GAAjB9B,iBAAiB;AA6DvB,eAAeA,iBAAiB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}