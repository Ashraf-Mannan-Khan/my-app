{"ast":null,"code":"var _jsxFileName = \"/Users/ashrafkhan/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '367a1dd9d8fa4e7aac443fb3cd47e9fd';\n// Replace with your Client ID\nconst redirectUri = \"http://localhost:3000/callback\"; // Replace with your redirect URI\nconst scopes = \"user-read-private user-read-email\";\nconst SpotifySongSearch = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    // Extract access token from URL fragment\n    const hash = window.location.hash;\n    if (hash) {\n      const params = new URLSearchParams(hash.substring(1));\n      const token = params.get(\"access_token\");\n      if (token) {\n        setAccessToken(token);\n        window.location.hash = \"\"; // Clear hash\n      }\n    }\n  }, []);\n  const handleLogin = () => {\n    const authUrl = `https://accounts.spotify.com/authorize?response_type=token&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes)}`;\n    window.location.href = authUrl;\n  };\n  const handleSearch = async () => {\n    if (!query) {\n      alert(\"Please enter a search term.\");\n      return;\n    }\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=track`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setSongs(data.tracks.items);\n      } else {\n        alert(\"Failed to fetch songs. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching songs:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"Arial, sans-serif\",\n      margin: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spotify Song Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), !accessToken ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Log in to Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Search for a song...\",\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [song.name, \" by \", song.artists.map(artist => artist.name).join(\", \")]\n        }, song.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifySongSearch, \"/hDqOmVl7yuMMXb3RLLvM1f76O0=\");\n_c = SpotifySongSearch;\nexport default SpotifySongSearch;\nvar _c;\n$RefreshReg$(_c, \"SpotifySongSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","clientId","redirectUri","scopes","SpotifySongSearch","_s","accessToken","setAccessToken","query","setQuery","songs","setSongs","hash","window","location","params","URLSearchParams","substring","token","get","handleLogin","authUrl","encodeURIComponent","href","handleSearch","alert","response","fetch","headers","Authorization","ok","data","json","tracks","items","error","console","style","fontFamily","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","marginRight","marginTop","map","song","name","artists","artist","join","id","_c","$RefreshReg$"],"sources":["/Users/ashrafkhan/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst clientId = '367a1dd9d8fa4e7aac443fb3cd47e9fd';\n // Replace with your Client ID\nconst redirectUri = \"http://localhost:3000/callback\"; // Replace with your redirect URI\nconst scopes = \"user-read-private user-read-email\";\n\nconst SpotifySongSearch = () => {\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    // Extract access token from URL fragment\n    const hash = window.location.hash;\n    if (hash) {\n      const params = new URLSearchParams(hash.substring(1));\n      const token = params.get(\"access_token\");\n      if (token) {\n        setAccessToken(token);\n        window.location.hash = \"\"; // Clear hash\n      }\n    }\n  }, []);\n\n  const handleLogin = () => {\n    const authUrl = `https://accounts.spotify.com/authorize?response_type=token&client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes)}`;\n    window.location.href = authUrl;\n  };\n\n  const handleSearch = async () => {\n    if (!query) {\n      alert(\"Please enter a search term.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=track`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setSongs(data.tracks.items);\n      } else {\n        alert(\"Failed to fetch songs. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching songs:\", error);\n    }\n  };\n\n  return (\n    <div style={{ fontFamily: \"Arial, sans-serif\", margin: \"20px\" }}>\n      <h1>Spotify Song Search</h1>\n      {!accessToken ? (\n        <button onClick={handleLogin}>Log in to Spotify</button>\n      ) : (\n        <div>\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Search for a song...\"\n            style={{ marginRight: \"10px\" }}\n          />\n          <button onClick={handleSearch}>Search</button>\n          <ul style={{ marginTop: \"20px\" }}>\n            {songs.map((song) => (\n              <li key={song.id}>\n                {song.name} by {song.artists.map((artist) => artist.name).join(\", \")}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SpotifySongSearch;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}